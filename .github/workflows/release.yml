name: Create Release and Upload Asset

on:
  push:
    tags:
      - 'v*.*.*' # Trigger on tags like v0.1.0, v1.0.0, etc.

permissions:
  contents: write # Needed to create releases

jobs:
  build-release:
    runs-on: macos-latest # Use macOS runner as it's a macOS app

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x' # Use a recent Python 3 version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # Ensure py2app is installed if build_app.py uses it
        pip install py2app

    - name: Build the application
      run: python build_app.py

    - name: Determine Asset Name and Path
      id: vars
      run: |
        APP_NAME="TurboSync" # Or derive from setup.py if needed
        APP_PATH="dist/${APP_NAME}.app"
        TAG_NAME="${{ github.ref_name }}" # e.g., v0.1.0
        ZIP_NAME="${APP_NAME}-${TAG_NAME}.zip"
        echo "APP_PATH=${APP_PATH}" >> $GITHUB_OUTPUT
        echo "ZIP_NAME=${ZIP_NAME}" >> $GITHUB_OUTPUT
        echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_OUTPUT

    - name: Check if App exists
      run: |
        echo "Checking for application at ${{ steps.vars.outputs.APP_PATH }}"
        ls -l dist/
        if [ ! -d "${{ steps.vars.outputs.APP_PATH }}" ]; then
          echo "Error: Application bundle not found at ${{ steps.vars.outputs.APP_PATH }}"
          exit 1
        fi

    - name: Zip the application bundle
      run: |
        echo "Zipping ${{ steps.vars.outputs.APP_PATH }} into ${{ steps.vars.outputs.ZIP_NAME }}"
        # Ensure we are in the correct directory to zip relative paths correctly
        cd dist
        zip -r "../${{ steps.vars.outputs.ZIP_NAME }}" "${{ steps.vars.outputs.APP_NAME }}.app"
        cd ..
        echo "Zip created: ${{ steps.vars.outputs.ZIP_NAME }}"
        ls -l ${{ steps.vars.outputs.ZIP_NAME }}

    - name: Create Release and Upload Release Asset
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ steps.vars.outputs.ZIP_NAME }}
        tag_name: ${{ steps.vars.outputs.TAG_NAME }}
        name: Release ${{ steps.vars.outputs.TAG_NAME }}
        body: Automated release for ${{ steps.vars.outputs.TAG_NAME }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
