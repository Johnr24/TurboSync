name: Build macOS App

on:
  push:
    branches: [ main ] # Trigger on pushes to main
    tags:
      - 'v*' # Trigger on version tags like v1.0, v2.1.3
  pull_request:
    branches: [ main ] # Optional: Trigger on PRs to main
  workflow_dispatch: # Allow manual triggering

permissions: # Added: Grant permission to create releases
  contents: write

jobs:
  build:
    name: Build macOS App Bundle
    runs-on: macos-latest # Use the latest macOS runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' # Use a recent Python 3 version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # Ensure py2app is installed if not in requirements.txt
          pip install py2app

      - name: Install build tools (fswatch, rclone, create-dmg)
        run: |
          brew install fswatch
          brew install rclone
          brew install create-dmg

      - name: Run build script
        run: python build_app.py --non-interactive # Execute build script non-interactively (fswatch/rclone pre-installed)

      # Fix permissions on the app bundle to ensure it works correctly
      - name: Fix app permissions
        run: |
          chmod -R u+w dist/TurboSync.app
          find dist/TurboSync.app -type f -name "*.so" -exec chmod +x {} \;
          find dist/TurboSync.app -type f -name "*.dylib" -exec chmod +x {} \;
          chmod +x dist/TurboSync.app/Contents/MacOS/TurboSync
          # Remove quarantine flag if it exists
          xattr -d com.apple.quarantine dist/TurboSync.app || true

      # --- Release Steps (only run on tag push) ---
      - name: Determine Asset Name and Path (for Release)
        if: startsWith(github.ref, 'refs/tags/') # Only run for tags
        id: vars
        run: |
          APP_NAME="TurboSync" # Or derive from setup.py if needed
          APP_PATH="dist/${APP_NAME}.app"
          TAG_NAME="${{ github.ref_name }}" # e.g., v0.1.0
          DMG_NAME="${APP_NAME}-${TAG_NAME}.dmg" # Changed from ZIP_NAME
          echo "APP_PATH=${APP_PATH}" >> $GITHUB_OUTPUT
          echo "DMG_NAME=${DMG_NAME}" >> $GITHUB_OUTPUT # Changed from ZIP_NAME
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_OUTPUT

      - name: Check if App exists (for Release)
        if: startsWith(github.ref, 'refs/tags/') # Only run for tags
        run: |
          echo "Checking for application at ${{ steps.vars.outputs.APP_PATH }}"
          ls -l dist/
          if [ ! -d "${{ steps.vars.outputs.APP_PATH }}" ]; then
            echo "Error: Application bundle not found at ${{ steps.vars.outputs.APP_PATH }}"
            exit 1
          fi

      - name: Create DMG (for Release)
        if: startsWith(github.ref, 'refs/tags/') # Only run for tags
        run: |
          echo "Creating DMG: ${{ steps.vars.outputs.DMG_NAME }} from ${{ steps.vars.outputs.APP_PATH }}"
          create-dmg \
            --volname "TurboSync ${{ steps.vars.outputs.TAG_NAME }}" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "TurboSync.app" 250 190 \
            --hide-extension "TurboSync.app" \
            --app-drop-link 540 185 \
            "${{ steps.vars.outputs.DMG_NAME }}" \
            "${{ steps.vars.outputs.APP_PATH }}"
          echo "DMG created: ${{ steps.vars.outputs.DMG_NAME }}"
          ls -l "${{ steps.vars.outputs.DMG_NAME }}"

      - name: Create Release and Upload Release Asset
        if: startsWith(github.ref, 'refs/tags/') # Only run for tags
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.vars.outputs.DMG_NAME }} # Changed from ZIP_NAME to DMG_NAME
          tag_name: ${{ steps.vars.outputs.TAG_NAME }}
          name: Release ${{ steps.vars.outputs.TAG_NAME }}
          body: Automated release for ${{ steps.vars.outputs.TAG_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # --- Artifact Upload (only run on non-tag pushes/PRs) ---
      - name: Upload macOS App Artifact
        if: ${{ !startsWith(github.ref, 'refs/tags/') }} # Corrected: Only run for non-tags
        uses: actions/upload-artifact@v4
        with:
          name: TurboSync-macOS-App # Name of the artifact zip file
          path: dist/TurboSync.app # Path to the built .app bundle
          if-no-files-found: error # Fail if the .app isn't found
